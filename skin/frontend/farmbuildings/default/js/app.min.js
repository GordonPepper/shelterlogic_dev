!function($) {
    function shuffle(array) {
        for (var t, i, m = array.length; m; ) i = Math.floor(Math.random() * m--), t = array[m], 
        array[m] = array[i], array[i] = t;
        return array;
    }
    function setUISlide() {
        UISlide = {
            width: $(".UIBuilderContainer").width(),
            in_width: $(".UIBuilderContainer").innerWidth(),
            count: _ui_builder_list_li.size()
        };
    }
    $(document).foundation({
        reveal: {
            close_on_background_click: !1
        }
    }), $.fn.isOnScreen = function() {
        var element = this.get(0), bounds = element.getBoundingClientRect();
        return bounds.top < window.innerHeight && bounds.bottom > 0;
    }, angular.module("farmApp", [ "mm.foundation" ]), angular.module("farmApp").controller("galleryCtrl", function($scope) {
        function build() {
            var images = shuffle(image_stack[0]);
            return images;
        }
        $scope.rebuild = function(style_type) {
            $scope.images = shuffle(image_stack[style_type]);
        };
        image_stack.BN, image_stack.PK, image_stack.RD;
        $scope.quantity = 5, $scope.images = build();
    });
    var _bod = $("body"), _b = $("#building"), _screenH = $(".winH"), _screenW = $(".winW"), _screenWH = $(".winHW"), _screenCenter = $(".centerCenter"), _screenCenterVertical = $(".centerVertical"), _screenCenterHorizontal = $(".centerHorizontal"), _makeSquare = $(".makeSquare"), _startMod = $("#startModal"), _landscapeMod = $("#landscapeModal"), _calcPrice = ($("#door_center_height"), 
    $("#diagram"), $("#theDiagram"), $(".calcPrice")), _preload = $(".preload"), _product_attr_spec = $("#product-attribute-specs-table td.data"), _buttonContainer = $(".buttonContainer"), _addToCart = $("#addToCart"), _showForm = $("#showForm"), _ui_element_option = ($(".UI"), 
    $(".UI.UI-Option")), _ui_builder_nav_item = ($(".UIBuilderNav"), $(".UIBuilderNav .UI")), _ui_builder_list = $("#UIList"), _ui_builder_list_li = $("ul#UIList li.UISection"), _info_selected_class = "selected", _uni_info_class = "info", _ui_quickNav = $("#quickNav"), _info_Main = $("#infoMain"), _mobile_info_Main = $("#mobileInfoMain"), _accordion_dl_main = $("#mainAccordion"), _accordion_dl_mobile = $("#mobileAccordion"), _selectPartial = "configurable_", _defaultFormOption = ($(".product-essential select"), 
    "Choose a"), _price = $("#mainPrice .regular-price .price"), _quoteModal = $("#quoteModal"), _quoteMessage = _quoteModal.find("input[value=##build_description##]"), _miniCart = $(".header-minicart .count"), _cart_count = ($(".header-minicart .count"), 
    $(".fa.fa-shopping-cart span")), alpha = "1qQ2wW3eE4rR5tT6yY7uU8iI9oO0pPazsxdcfvgbhnjmklAZSXDCFVGBHNJMKL", _lastBuild = (alpha.split(""), 
    alpha.split("").reverse(), "lastBuild"), _lastSelection = 0, _cookExp = 7, _cookPath = window.location.pathname, loadingTimer = setTimeout(_.noop, 2500), hash = window.location.hash.split("#").pop().split("!"), editConfiguration = "undefined" != typeof aeConfig ? aeConfig.config.reconfigure : !1;
    $.cookie.raw = !0, $.fn.tagName = function() {
        return this.prop("tagName").toLowerCase();
    }, $.fn.doesExist = function() {
        return $(this).length > 0;
    }, $.fn.centerCenter = function() {
        return $(this).length <= 0 ? !1 : void $(this).each(function() {
            var hWide = $(this).outerWidth() / 2, hTall = $(this).outerHeight() / 2;
            hWide = "-" + hWide + "px", hTall = "-" + hTall + "px", $(this).css({
                "margin-left": hWide,
                "margin-top": hTall
            });
        });
    }, $.fn.centerVertical = function() {
        return $(this).length <= 0 ? !1 : void $(this).each(function() {
            var hTall = $(this).height() / 2;
            hTall = "-" + hTall + "px", $(this).css({
                "margin-top": hTall
            });
        });
    }, $.fn.centerHorizontal = function() {
        return $(this).length <= 0 ? !1 : void $(this).each(function() {
            var hWide = $(this).width() / 2;
            hWide = "-" + hWide + "px", $(this).css({
                "margin-left": hWide
            });
        });
    };
    var browser = navigator.sayswho.toLowerCase(), is_explorer = (browser.indexOf("chrome") > -1, 
    browser.indexOf("ie") > -1), is_IE11 = is_explorer && parseInt(browser.split(" ")[1]) >= 11 ? !0 : !1, is_IE10Below = !is_IE11 && is_explorer && parseInt(browser.split(" ")[1]) < 11 ? !0 : !1, is_IE9Below = !is_IE11 && is_explorer && parseInt(browser.split(" ")[1]) < 10 ? !0 : !1, is_safari = (browser.indexOf("firefox") > -1, 
    browser.indexOf("safari") > -1), device_type = (browser.indexOf("presto") > -1, 
    isMobile.any ? "mobile" : "desktop");
    setTimeout(function() {
        $("body").addClass(device_type + " op_10 " + browser.split(" ")[0]);
    }, 500), function() {
        for (var method, noop = function() {}, methods = [ "assert", "clear", "count", "debug", "dir", "dirxml", "error", "exception", "group", "groupCollapsed", "groupEnd", "info", "log", "markTimeline", "profile", "profileEnd", "table", "time", "timeEnd", "timeStamp", "trace", "warn" ], length = methods.length, console = window.console = window.console || {}; length--; ) method = methods[length], 
        console[method] || (console[method] = noop);
    }();
    var UISlide = {};
    setUISlide(), $.extend(!0, UISlide, {
        contanWidth: UISlide.in_width * UISlide.count
    });
    var s7_guy = hash.indexOf("charact1") >= 0 ? "xx-xx-000xxx00_charact1" : "xx-xx-000xxx00_charact3", s7_colors = {
        MAIN: "$main$",
        "Hunter Green": "$huntergreen$",
        Black: "$black$",
        Gray: "$gray$",
        White: "$white$",
        Green: "$green$",
        Tan: "$tan$",
        Clear: "$translucent$",
        Brown: "$brown$"
    }, _selectArray = {
        Style: null,
        Width: null,
        Height: null,
        Length: null,
        FabricMaterial: null,
        FabricColor: null
    }, _optionsObj = {
        product_line: "PE",
        style: {
            "0": null,
            "14": "A",
            "13": "B",
            "12": "C"
        },
        category: "A",
        front_panel: {
            "17": "C",
            "18": "D"
        },
        back_panel: {
            "default": "A",
            "17": "C",
            "18": "D"
        },
        fabricmaterial: {
            "15": "01",
            "17": "02",
            "16": "03"
        },
        fabriccolor: {
            "23": "01",
            GY: "03",
            GN: "04",
            TN: "05",
            "19": "08",
            "18": "09"
        },
        frame_color: "F",
        Width: 3,
        Length: 3,
        Height: 2
    }, _formObj = {
        product_line: "PE",
        style: {},
        width: {},
        height: {},
        length: {},
        fabricmaterial: {},
        fabriccolor: {}
    }, step = 1, _gaEvent = _gaEvent || {
        uiEvent: function(tagname, eventtype, datainteraction) {
            ga("send", "event", tagname, eventtype, datainteraction);
        },
        cart: {
            added: function() {
                ga("send", "event", "button", "click", "Add To Cart");
            },
            updated: function() {
                ga("send", "event", "button", "click", "Update To Cart");
            }
        }
    }, farmBuilding = farmBuilding || {};
    !function(_NS, undefined) {
        window._local = {
            isConfigurable: function() {
                return _bod.hasClass("product-sp-series-shelter");
            },
            firstElement: function(obj) {
                for (var a in obj) return a;
            },
            center: function() {
                centertimer && clearTimeout(centertimer);
                var doCenter = function() {
                    _screenCenter.each(function() {
                        $(this).stop().centerCenter();
                    });
                }, centertimer = setTimeout(doCenter, 1500);
            },
            setActive: function(pos) {
                var currentPos = pos + 1, quickSelect = function() {
                    $(this).data("index") < currentPos ? $(this).removeClass("disable").addClass("active") : $(this).data("index") == currentPos ? $(this).removeClass("disable").addClass("current") : $(this).removeClass("active").addClass("disable");
                };
                return $(".UI.quickSelect").each(quickSelect);
            },
            translateValue: function(v, item) {
                if (v.indexOf(_defaultFormOption) <= 0) return !1;
                var _initialV = v, _translatedV = _initialV, _item = item.toLowerCase();
                return _translatedV = _formObj[_item][_initialV];
            },
            translateSku: function(type, value) {
                var localArray = _optionsObj[type.toLowerCase()], transVal = localArray[value];
                return transVal && "undefined" !== transVal && null !== transVal ? transVal : !1;
            },
            calculateSku: function() {
                var style = this.translateSku("style", _formObj.style[_selectArray.Style]), front_panel = _formObj.width[_selectArray.Width] <= 17 ? _optionsObj.front_panel[17] : _optionsObj.front_panel[18], back_panel = _optionsObj.back_panel["default"];
                "BN" == _formObj.style[_selectArray.Style] && (back_panel = _formObj.width[_selectArray.Width] <= 17 ? _optionsObj.back_panel[17] : _optionsObj.back_panel[18]);
                var fabric = this.translateSku("fabricmaterial", _formObj.fabricmaterial[_selectArray.FabricMaterial]), color = this.translateSku("fabriccolor", _formObj.fabriccolor[_selectArray.FabricColor]), width = "0" + _formObj.width[_selectArray.Width], length = _formObj.length[_selectArray.Length] < 100 ? "0" + _formObj.length[_selectArray.Length] : _formObj.length[_selectArray.Length], SKU = _optionsObj.product_line + style + _optionsObj.category + front_panel + back_panel + fabric + color + _optionsObj.frame_color + width + length + _formObj.height[_selectArray.Height];
                return SKU;
            },
            pop: {
                start: function() {
                    _bod.addClass("start"), _startMod.foundation("reveal", "open");
                }
            },
            buildCookie: {
                shuffle: function(o) {
                    for (var j, x, i = o.length; i; j = 9, x = o[--i], o[i] = o[j], o[j] = x) ;
                    return o;
                },
                set: function(_name, _val, _path) {
                    var setPath = "undefined" == typeof _path ? _cookPath : _path;
                    $.cookie(_name, _val, {
                        expires: _cookExp,
                        path: setPath
                    });
                },
                get: function(_name) {
                    return $.cookie(_name);
                },
                getObj: function() {
                    return $.cookie();
                },
                tester: function(_name) {
                    return $.cookie(_name) !== undefined ? !0 : !1;
                },
                relinquish: function(_name) {
                    return $.removeCookie(_name, {
                        path: _cookPath
                    });
                },
                clear: function() {
                    return Object.keys(_local.buildCookie.getObj()).forEach(function(key) {
                        _local.buildCookie.relinquish(_lastBuild), RegExp(/\b(build_)/g).test(key) && _local.buildCookie.relinquish(key);
                    }), this.set("refresh", "1"), farmBuilding.init.refresh();
                }
            }
        }, $.extend(!0, _NS, {
            geo: {
                notification: function(_allow, _geoData) {
                    var geoData = jQuery.parseJSON(_geoData);
                    _allow ? $(".geo_country").text(geoData.country + ", " + geoData.region) : ($("#geo_notify").addClass("alert").removeClass("hide"), 
                    $(".geo_country").text(geoData.country + ", " + geoData.region));
                },
                reference: function() {
                    return _local.buildCookie.tester("allowed_country") && _local.buildCookie.tester("geoData") ? void _NS.geo.notification(_local.buildCookie.get("allowed_country"), _local.buildCookie.get("geoData")) : void $.ajax({
                        type: "POST",
                        url: "/geo/",
                        data: {
                            key: "98836:k4FKoWiSreou"
                        },
                        dataType: "json",
                        complete: function(data) {
                            if (data) {
                                results = jQuery.parseJSON(data.responseText);
                                var allow_country = _.filter(allowed_countries, function(i) {
                                    return i.value == results.country ? i : void 0;
                                }).length > 0 ? 1 : 0;
                                if (allow_country) {
                                    allow_reg = "allowed_reg_" + results.country;
                                    var allow = _.filter(window[allow_reg], function(i) {
                                        return i.code == results.response.subdivisions[0].iso_code ? i : void 0;
                                    }).length > 0 ? 1 : 0;
                                }
                                if (results.success) {
                                    var _gD = JSON.stringify({
                                        iso_country: results.country,
                                        country: results.response.country.names.en,
                                        iso_region: results.response.subdivisions[0].iso_code,
                                        region: results.response.subdivisions[0].names.en
                                    });
                                    return _local.buildCookie.set("geoData", _gD, "/"), _local.buildCookie.set("allowed_country", allow, "/"), 
                                    void _NS.geo.notification(allow, _gD);
                                }
                                return void console.log("Error: " + results.response);
                            }
                        }
                    });
                }
            },
            imageUrl: function() {
                if ("FabricMaterial" == _lastSelection) return !0;
                var _i = _b.find("img"), style = _local.translateSku("style", _selectArray.Style), width = _formObj.width[_selectArray.Width], height = _formObj.height[_selectArray.Height] < 10 ? "0" + _formObj.height[_selectArray.Height] : _formObj.height[_selectArray.Height], length = _formObj.length[_selectArray.Length], color = s7_colors[_formObj.fabriccolor[_selectArray.FabricColor]] !== undefined ? s7_colors[_formObj.fabriccolor[_selectArray.FabricColor]] : "$gray$";
                if (style && style !== undefined || (style = "a"), width && width !== undefined) if (width && !height || width && height === undefined) {
                    var setHeight = _formObj.height[_local.firstElement(_formObj.height)];
                    height = 10 > setHeight ? "0" + setHeight : setHeight;
                } else (width && height && !length || width && height && length === undefined) && (length = 20); else {
                    switch (width = "12", style.toLowerCase()) {
                      case "a":
                      case "b":
                        height = "08";
                        break;

                      case "c":
                        height = "09";
                    }
                    length = 20;
                }
                color && color !== undefined || (color = s7_colors[_formObj.fabriccolor.Gray]);
                var image_vs, logo_vs, image_url, imgRound = 500 * Math.round(Math.floor(1.5 * $(window).width()) / 500), imgWidth = 2e3 > imgRound ? imgRound > 500 ? imgRound : 500 : 1999, image_white = "", img_offset = 0;
                switch (!0) {
                  case length > 100:
                    length = "100", img_offset = "0,0";
                    break;

                  case 100 >= length && length > 90:
                    length = "100", img_offset = "0,0";
                    break;

                  case 90 >= length && length > 70:
                    length = "080", img_offset = "-0.04,0";
                    break;

                  case 70 >= length && length > 50:
                    length = "060", img_offset = "-0.06,0";
                    break;

                  case 50 >= length && length > 30:
                    length = "040", img_offset = "-0.10,0";
                    break;

                  case 30 >= length:
                  default:
                    length = "020", img_offset = "-0.18,0";
                }
                return image_vs = ("pe-" + style + "b-0" + width + "xxx" + height + "_cover" + length).toLowerCase(), 
                logo_vs = ("pe-" + style + "b-0" + width + "xxx" + height + "_logo-frm").toLowerCase(), 
                image_white = ("pe-" + style + "b-0" + width + "xxx" + height + "_white").toLowerCase(), 
                $.ajax({
                    type: "POST",
                    url: "/image_collections/images.php",
                    data: {
                        cover: image_vs,
                        logo: logo_vs,
                        inside: image_white,
                        color: color.replace(/\$/g, ""),
                        guy: s7_guy,
                        offset: img_offset,
                        width: imgWidth
                    },
                    dataType: "json",
                    complete: function(data) {
                        if (data) {
                            results = jQuery.parseJSON(data.responseText);
                            var nImg = document.createElement("img");
                            nImg.setAttribute("src", results.url), nImg.setAttribute("class", "preload"), _preload.append(nImg), 
                            nImg.onload = function() {
                                return _i.attr("src", results.url), _local.center();
                            }, nImg.onerror = function() {
                                image_url = "Peak Frame" === _formObj.style[_selectArray.Style] ? "http://s7d2.scene7.com/is/image/ShelterLogic/blank_logo?layer=1&src=pe-ab-012xxx08_cover020&$gray$&posN=-0.18,0&layer=2&src=pe-ab-012xxx08_white&posN=-0.18,0&layer=3&src=pe-ab-012xxx08_logo-frm&$gray$&posN=-0.18,0&layer=4&src=xx-xx-000xxx00_charact3&posN=-0.18,0&fmt=png-alpha&wid=1999&hei=1999" : "Barn Frame" === _formObj.style[_selectArray.Style] ? "http://s7d2.scene7.com/is/image/ShelterLogic/blank_logo?layer=1&src=pe-cb-012xxx09_cover020&$gray$&posN=-0.18,0&layer=2&src=pe-cb-012xxx09_white&posN=-0.18,0&layer=3&src=pe-cb-012xxx09_logo-frm&$gray$&posN=-0.18,0&layer=4&src=xx-xx-000xxx00_charact3&posN=-0.18,0&fmt=png-alpha&wid=1999&hei=1999" : "Round Frame" === _formObj.style[_selectArray.Style] ? "http://s7d2.scene7.com/is/image/ShelterLogic/blank_logo?layer=1&src=pe-bb-012xxx08_cover020&$gray$&posN=-0.18,0&layer=2&src=pe-bb-012xxx08_white&posN=-0.18,0&layer=3&src=pe-bb-012xxx08_logo-frm&$gray$&posN=-0.18,0&layer=4&src=xx-xx-000xxx00_charact3&posN=-0.18,0&fmt=png-alpha&wid=1999&hei=1999" : "http://s7d2.scene7.com/is/image/ShelterLogic/blank_logo?layer=1&src=pe-ab-012xxx08_cover020&$gray$&posN=-0.18,0&layer=2&src=pe-ab-012xxx08_white&posN=-0.18,0&layer=3&src=pe-ab-012xxx08_logo-frm&$gray$&posN=-0.18,0&layer=4&src=xx-xx-000xxx00_charact3&posN=-0.18,0&fmt=png-alpha&wid=1999&hei=1999", 
                                _i.attr("src", image_url);
                                return _local.center();
                            };
                        } else console.log("Error: " + response.error);
                    }
                }), _selectArray.Style.indexOf("hoose") >= 0 ? "" : $("#img_" + _selectArray.Style).trigger("click");
            },
            reset_selectArray: function(_dt_) {
                switch (_dt_) {
                  case "Style":
                    _selectArray.Width = null, _selectArray.Height = null, _selectArray.Length = null, 
                    _selectArray.FabricMaterial = null, _selectArray.FabricColor = null;
                    break;

                  case "Width":
                    _selectArray.Height = null, _selectArray.Length = null, _selectArray.FabricMaterial = null, 
                    _selectArray.FabricColor = null;
                    break;

                  case "Height":
                    _selectArray.Length = null, _selectArray.FabricMaterial = null, _selectArray.FabricColor = null;
                    break;

                  case "Length":
                    _selectArray.FabricMaterial = null, _selectArray.FabricColor = null;
                    break;

                  case "FabricMaterial":
                    _selectArray.FabricColor = null;
                    break;

                  case "FabricColor":                }
            },
            uiLoad: {
                getLoadNDoor: function() {
                    function ImageExist() {
                        if ("choose an option..." !== _selectArray.Style.toLowerCase() && "choose an option..." !== _selectArray.Width.toLowerCase() && "choose an option..." !== _selectArray.Height.toLowerCase()) {
                            var StyleMain = _formObj.style[_selectArray.Style].split(" ")[0], style = StyleMain.split("")[0], width = _formObj.width[_selectArray.Width], height = _formObj.height[_selectArray.Height], src = getBaseUrl() + "images/src/diagrams/" + StyleMain + "/" + style + "_" + width + "x" + height + ".png";
                            $.get(src).done(function() {
                                $("#theDiagram").each(function() {
                                    $(this).attr("src", src);
                                }), $("#diagram").each(function() {
                                    $(this).removeClass("hide");
                                });
                            }).fail(function() {
                                $("#theDiagram").each(function() {
                                    $(this).attr("src", "");
                                }), $("#diagram").each(function() {
                                    $(this).addClass("hide");
                                });
                            });
                        }
                    }
                    return _product_attr_spec.each(function() {
                        var _id = $(this).data("attribute-id");
                        $("#" + _id + " .attribute").text($(this).text());
                    }), ImageExist();
                },
                setSelectedItems: function() {
                    if (!_selectArray) return !1;
                    _NS.uiEvent.whichChoice();
                    var _return = Object.keys(_selectArray).forEach(function(key) {
                        $('.UI[data-type="' + key + '"]').each(function() {
                            $(this).data("value") == _selectArray[key] && $(this).addClass(_info_selected_class);
                        }), $("#" + key + "Selected .attribute").text(null !== _formObj[key.toLowerCase()][_selectArray[key]] && _formObj[key.toLowerCase()][_selectArray[key]] !== undefined && _formObj[key.toLowerCase()][_selectArray[key]].indexOf(_defaultFormOption) < 0 ? "Width" == key || "Height" == key || "Length" == key ? _formObj[key.toLowerCase()][_selectArray[key]] + "'" : _formObj[key.toLowerCase()][_selectArray[key]] : "-");
                    });
                    return _return;
                },
                setUIListWidth: function() {
                    _ui_builder_list_li.width(UISlide.width), _ui_builder_list.width(UISlide.contanWidth), 
                    this.setSelectedItems(), this.getLoadNDoor();
                },
                duplicateInfo: function() {
                    _mobile_info_Main.html(_info_Main.html()), _accordion_dl_mobile.html(_accordion_dl_main.html());
                },
                ajaxModalConnect: function() {
                    $(".modalAjax").each(function() {
                        var _this = $(this), fileslocation = (window.location.host, getBaseUrl()), h = _this.attr("href").split("#").pop();
                        _this.attr("href", fileslocation + "modal/" + h + ".php");
                    });
                },
                updateCartCount: function() {
                    _cart_count.text(_miniCart.text());
                },
                getFormAndSetUI: function() {
                    return _ui_builder_list_li.each(function(index) {
                        var _e = $(this), _eAsset = _e.attr("id").split("choose").pop();
                        _eAsset = _eAsset.split("Fabric").pop(), _ui_quickNav.append('<div class="small-4 large-4 columns UI quickSelect" data-func="whichChoice" data-index="' + index + '">' + _eAsset + "</div>");
                    }), _ui_element_option.each(function() {
                        var _this = $(this);
                        if ("select" == _this.prop("tagName").toLowerCase()) {
                            var __type = _this.data("type"), _loc_select = $("." + _selectPartial + __type);
                            $(_loc_select).find("option").each(function() {
                                var _ = $(this), _new = (_.attr("value"), _.clone());
                                _new.attr("data-value", _.text()), _this.append(_new);
                            });
                        }
                    }), _buttonContainer.each(function() {
                        var _this = $(this), __id = _this.attr("id"), __type = __id.split("build_").pop(), _loc_select = $("." + _selectPartial + __type), _dataFunc = "setAttr";
                        $(_loc_select).find("option").each(function() {
                            var __this = $(this);
                            if ("startStyle" === _this.parent().attr("id") && (_dataFunc = "setStyle"), __this.text().indexOf(_defaultFormOption) < 0) switch (__type) {
                              case "Style":
                                var theText = __this.text().split("P");
                                _this.append('<button class="UI UI-Option button expand" data-func="' + _dataFunc + '" data-type="' + __type + '" data-value="' + __this.attr("value") + '">' + __this.text() + '<i class="fa fa-check center"></i></button>');
                                break;

                              case "FabricMaterial":
                                var theText = __this.text().split("P");
                                _this.append('<button class="UI UI-Option button expand textLeft hide-for-large-up" data-func="' + _dataFunc + '" data-type="' + __type + '" data-value="' + __this.attr("value") + '">' + theText[0] + '<i class="fa fa-check center"></i></button>'), 
                                _this.append('<button class="UI UI-Option button expand textLeft show-for-large-up" data-func="' + _dataFunc + '" data-type="' + __type + '" data-value="' + __this.attr("value") + '">' + __this.text() + '<i class="fa fa-check center"></i></button>');
                                break;

                              case "FabricColor":
                                _this.append('<button class="UI UI-Option button expand box-shadow textCenter makeSquare ' + __this.text().replace(" ", "_") + '" data-func="' + _dataFunc + '" data-type="' + __type + '" data-value="' + __this.attr("value") + '"> ' + __this.text() + ' <i class="fa fa-check centerVertical centerHorizontal"></i></button>');
                            }
                        });
                    }), this.setUIListWidth(), this.duplicateInfo();
                },
                setPrice: function() {
                    if (_price.doesExist()) {
                        var _total = _price.text();
                        "$0.00" === _total || "" === _total ? (_calcPrice.text("Build Your Building"), _addToCart.addClass("disabled")) : (_calcPrice.text(_total), 
                        _addToCart.removeClass("disabled"), $(".btn-cart").each(function() {
                            "none" == $(this).css("display") && _addToCart.text($(this).attr("data-text")).attr("data-func", $(this).attr("data-func"));
                        }));
                    }
                }
            },
            fireEvent: function(element, evttype) {
                if (document.createEventObject) {
                    if (is_IE10Below) {
                        if (el = element, document.createEvent) {
                            var evt = document.createEvent("HTMLEvents");
                            evt.initEvent(evttype, !1, !1), el.dispatchEvent(evt);
                        } else document.createEventObject && el.fireEvent("on" + evttype);
                        return this;
                    }
                    var evt = document.createEventObject();
                    return element.fireEvent("on" + evttype, evt);
                }
                var evt = document.createEvent("HTMLEvents");
                return evt.initEvent(evttype, !0, !0), !element.dispatchEvent(evt);
            },
            observing: {
                formChange: function() {
                    if (is_IE10Below) var timer = 5e3; else var timer = 200;
                    var formChanged = _.debounce(function() {
                        return is_IE10Below ? (setTimeout(_NS.init.getState, 2e3), $("#product_addtocart_form").unbind("DOMSubtreeModified")) : _NS.init.getState(!0) ? observer.disconnect() : void _NS.init.getState(!0);
                    }, timer, !0);
                    if (is_IE10Below) $("#product_addtocart_form").bind("DOMSubtreeModified", formChanged); else {
                        MutationObserver = window.MutationObserver || window.WebKitMutationObserver;
                        var observer = new MutationObserver(function(mutations) {
                            formChanged(mutations[0].target.id);
                        });
                        observer.observe(document.getElementById("product_addtocart_form"), {
                            subtree: !0,
                            attributes: !0,
                            childList: !0,
                            characterData: !0
                        });
                    }
                }
            },
            uiEvent: {
                "default": function() {
                    return $(".infoBuilderBox").removeClass(_info_selected_class), _ui_quickNav.stop().slideUp(), 
                    !0;
                },
                addToCart: function() {
                    _gaEvent.cart.added(), $(".add-to-cart-buttons button[data-id=atc-button]").trigger("click");
                },
                updateCart: function() {
                    _gaEvent.cart.updated(), $(".add-to-cart-buttons button.btn-cart").trigger("click");
                },
                getAQuote: function() {
                    _quoteModal.foundation("reveal", "open");
                },
                setAttr: function(_e_, simple) {
                    function _go(_value) {
                        var dataValue = _value;
                        _NS.reset_selectArray(dataType);
                        var cook = "build_" + dataType;
                        _local.buildCookie.tester(cook) && _local.buildCookie.relinquish(cook), "Style" == dataType && Object.keys(_local.buildCookie.getObj()).forEach(function(key) {
                            RegExp(/\b(_build_)/g).test(key) && _local.buildCookie.relinquish(key);
                        }), _local.buildCookie.set(cook, dataValue), _local.buildCookie.set(_lastBuild, dataType);
                        {
                            var _formE = $("." + _selectPartial + dataType);
                            _formE.attr("id");
                        }
                        if (simple) return _NS.observing.formChange();
                        $(_formE).stop().each(function() {
                            $(this).val(dataValue);
                        }), $(_formE).find("option").each(function() {
                            $(this).attr("value") == dataValue && $(this).attr(_info_selected_class, !0);
                        });
                        var obj = $(_formE).get();
                        Event.observe(obj[0], "change", function() {});
                        _NS.fireEvent(obj[0], "change");
                        return _NS.observing.formChange();
                    }
                    if (simple === undefined) var simple = !1, select = $(_e_.target); else var select = $(_e_), get = $.grep(select.attr("class").split(" "), function(v) {
                        return 0 === v.indexOf(_selectPartial);
                    }).join().split("_")[1];
                    var selecttype = select.prop("tagName"), is_select = "select" === selecttype.toLowerCase() ? !0 : !1, is_option = "option" === selecttype.toLowerCase() ? !0 : !1, is_button = "button" === selecttype.toLowerCase() ? !0 : !1, dataType = simple ? get : is_option ? select.parent().data("type") : select.data("type"), dataValue = simple ? select.val() : select.data("value");
                    if (this.default()) if (_gaEvent.uiEvent(selecttype, "click", (simple ? "simple_" : "complex_") + dataType), 
                    _selectArray[dataType] = dataValue, _lastSelection = dataType, is_select && is_explorer && !is_safari && !isMobile.any) {
                        if (simple) return _go(select.val()), _NS.loading(!0);
                        select.on("change", function() {
                            return _go($(this).val()), $(this).unbind("change"), _NS.loading(!0);
                        });
                    } else {
                        if (is_select && is_safari && !isMobile.any) return _go(select.val()), _NS.loading(!0);
                        if (!is_select || is_safari || isMobile.any) {
                            if (is_select && isMobile.any) select.on("blur", function() {
                                return _go($(this).val()), $(this).unbind("blur"), _NS.loading(!0);
                            }); else if (is_button) return _go(select.data("value")), _NS.loading(!0);
                        } else {
                            if (simple) return _go(select.val()), _NS.loading(!0);
                            select.on("change", function() {
                                return _go($(this).val()), $(this).unbind("change"), _NS.loading(!0);
                            });
                        }
                    } else ;
                },
                setStyle: function(_e_) {
                    if (this.default()) {
                        _NS.loading(!0);
                        {
                            var _e_type = $(_e_.target).prop("tagName");
                            "select" == _e_type.toLowerCase() ? !0 : !1, $(_e_.target).data("type"), $(_e_.target).data("value");
                        }
                        return $(".UISection #build_Style button[data-value*='" + $(_e_.target).data("value") + "']").trigger("click"), 
                        $("[data-reveal]").foundation("reveal", "close"), _bod.removeClass("start");
                    }
                },
                startOver: function() {
                    _local.buildCookie.clear();
                },
                whichChoice: function(e) {
                    if (this.default() && _ui_builder_list.doesExist()) {
                        var move = (UISlide.in_width - UISlide.width) / 2 + UISlide.width, curr_pos = parseInt(_ui_builder_list.css("left").split("px")[0].split("-").pop());
                        if (e) {
                            var _e = $(e.currentTarget);
                            if (_e.hasClass("fa")) if (_e.hasClass("prev")) var move_to = curr_pos - move; else var move_to = curr_pos + move; else if (_e.data("index") >= 0) {
                                var _position = _e.data("index"), check_move = move * _position;
                                if (check_move < UISlide.count * UISlide.width) var move_to = check_move; else var move_to = move * _position;
                            }
                        } else {
                            if (editConfiguration && 0 === _lastSelection) {
                                var _position = $("#chooseFabricColor").index();
                                _lastSelection = "FabricColor";
                            } else var _position = $("#choose" + _lastSelection).index();
                            _local.setActive(_position);
                            var check_move = move * (_position + 1);
                            if (check_move < UISlide.count * UISlide.width) var move_to = check_move; else var move_to = move * _position;
                        }
                        switch (_ui_builder_list.css({
                            left: "-" + move_to + "px"
                        }), 0 == move_to ? $(".prev").addClass("disable") : move_to >= (UISlide.count - 1) * UISlide.width ? $(".next").addClass("disable") : _ui_builder_nav_item.removeClass("disable"), 
                        step = "Step", _lastSelection) {
                          case "Style":
                            stepcount = 2;
                            break;

                          case "Width":
                            stepcount = 3;
                            break;

                          case "Height":
                            stepcount = 4;
                            break;

                          case "Length":
                            stepcount = 5;
                            break;

                          case "FabricMaterial":
                            stepcount = 6;
                            break;

                          case "FabricColor":
                            editConfiguration ? (stepcount = 1, step = 'Update - <i class="fa fa-angle-double-up"></i>') : (stepcount = 7, 
                            step = 'Buy - <i class="fa fa-cc-amex"></i> <i class="fa fa-cc-visa"></i> <i class="fa fa-cc-mastercard"></i> <i class="fa fa-credit-card"></i>');
                            break;

                          default:
                            stepcount = 1;
                        }
                        return progress = 100 / 7 * stepcount, $("#step-progress .meter.main").css("width", progress + "%").html(Math.ceil(progress) + "%");
                    }
                },
                getInfo: function(e) {
                    var infoId = $(e.target).data("infoid");
                    $("." + infoId).hasClass(_info_selected_class) ? $("." + infoId).removeClass(_info_selected_class) : ($("." + _uni_info_class).removeClass(_info_selected_class), 
                    $("." + infoId).addClass(_info_selected_class), $("." + infoId + " .scroll").height(_bod.hasClass("form-short") ? $(".leftSide .UIBottom .form").height() - 20 : $(".leftSide .UIBottom .UIBuilderContainer").height() + 8));
                },
                closeInfo: function(e) {
                    {
                        var _e = $(e.target);
                        _e.parent().attr("id");
                    }
                    return _e.parent().removeClass(_info_selected_class);
                },
                toggleQuickNav: function() {
                    return _ui_quickNav.stop().slideToggle();
                },
                closeAccordion: function() {
                    this.default() && $(".accordion-navigation, .accordion-navigation .content").removeClass("active");
                },
                checkOrientation: function(fired) {
                    if (this.default()) {
                        var landscape = !1;
                        switch (window.orientation) {
                          case 0:
                            landscape = !1;
                            break;

                          case 90:
                          case -90:
                            landscape = !0;
                        }
                        isMobile.any && $(window).height() < 459 && landscape ? _landscapeMod.foundation("reveal", "open") : isMobile.any && $(window).height() > 459 && !landscape && fired;
                    }
                }
            },
            resizer: function(f) {
                if (_local.isConfigurable() && setUISlide(), _screenWH.each(function() {
                    $(this).winHW(window, !0, !0, _local.center());
                }), _screenH.each(function() {
                    $(this).winHW(window, !0, !1, _local.center());
                }), _screenW.each(function() {
                    $(this).winHW(window, !1, !0, _local.center());
                }), _screenCenterHorizontal.each(function() {
                    $(this).centerHorizontal();
                }), _screenCenterVertical.each(function() {
                    $(this).centerVertical();
                }), _makeSquare.each(function() {
                    $(this).makeSQ();
                }), _NS.uiEvent.checkOrientation(f), isMobile.any || $(window).width() <= 1025 ? ($(".accordion-navigation .content").stop().removeClass("active"), 
                $("dl.accordion").stop().data("options", "multi_expand:false;toggleable: true")) : ($(".accordion-navigation .content").stop().hasClass("active") || $(".accordion-navigation .content").stop().addClass("active"), 
                $("dl.accordion").stop().data("options", "multi_expand:true;toggleable: true")), 
                isMobile.any) var cartCompresor = 2.4; else var cartCompresor = 1.1;
                $("#mainAccordion .panelnav, #mobileAccordion .panelnav").stop().fitText(1.2, {
                    minFontSize: "6px",
                    maxFontSize: "17px"
                }), $("#productTitle, #calcPrice").stop().fitText(1, {
                    minFontSize: "6px",
                    maxFontSize: "25px"
                }), $("#shortDesc").stop().fitText(cartCompresor, {
                    minFontSize: "4px",
                    maxFontSize: "20px"
                }), $("#addToCart").stop().fitText(cartCompresor, {
                    minFontSize: "10px",
                    maxFontSize: "25px"
                }), $("#build_FabricColor button").stop().fitText(cartCompresor, {
                    minFontSize: "10px",
                    maxFontSize: "25px"
                });
            },
            infoVisible: function() {
                $(".showInfo").each(function() {
                    var $this = $(this), infoEle = $("div." + $this.data("infoid")), infoContent = infoEle.find(".scroll").html();
                    infoContent || $this.hide();
                });
            },
            modalWork: {
                contactModal: function() {
                    $("#contactModal #infoTable").text("testing");
                },
                quoteModal: function() {
                    if (_quoteModal.doesExist() && _quoteMessage.doesExist()) {
                        var buildStatment = "";
                        Object.keys(_selectArray).forEach(function(key) {
                            _formObj[key.toLowerCase()][_selectArray[key]] !== undefined && (buildStatment = buildStatment + key + " - " + _formObj[key.toLowerCase()][_selectArray[key]] + ", ");
                        }), _quoteMessage.attr("value", "I would like a quote on a " + buildStatment + " building");
                    }
                }
            },
            loading: function(start) {
                var _unLoad = function() {
                    _bod.removeClass("loading"), _b.find("img").removeClass("op_0"), $(".elements .timer").removeClass("show"), 
                    $(".elements").removeClass("op_5"), $("#loader").removeClass("loading"), delete farmBuilding;
                };
                return start ? (_bod.addClass("loading"), _b.find("img").addClass("op_0"), $(".elements .timer").addClass("show"), 
                $(".elements").addClass("op_5"), $("#loader").addClass("loading")) : (loadingTimer && clearTimeout(loadingTimer), 
                loadingTimer = setTimeout(_unLoad, 1e3)), !0;
            },
            init: {
                getState: function(onloader) {
                    return _formObj = {
                        product_line: "PE",
                        style: {},
                        width: {},
                        height: {},
                        length: {},
                        fabricmaterial: {},
                        fabriccolor: {}
                    }, $(".buttonContainer, #quickNav, .UISection select").html(""), $("select[class^='" + _selectPartial + "']").each(function() {
                        var _CLASSSESplit = $(this).attr("class").split(" "), _CLASSSplit = _CLASSSESplit[0].split("_").pop(-1);
                        _class = _CLASSSplit.toLowerCase(), $(this).find("option").each(function() {
                            $(this).attr("value") && (_val = $(this).attr("value").toString(), _formObj[_class][_val] = $(this).text());
                        });
                    }), $("select[class^='" + _selectPartial + "']").each(function() {
                        var _CLASSSESplit = $(this).attr("class").split(" "), _CLASSSplit = _CLASSSESplit[0].split("_").pop(-1);
                        _selectArray[_CLASSSplit] = $(this).val();
                    }), _NS.imageUrl(), _NS.uiLoad.getFormAndSetUI(), onloader && _NS.resizer(), _NS.infoVisible(), 
                    _NS.uiLoad.setPrice(), _NS.loading(!1);
                },
                loader: function() {
                    return _NS.uiLoad.ajaxModalConnect(), _local.isConfigurable() && !is_IE9Below ? Pace.on("done", function() {
                        editConfiguration || _NS.init.getState(!0) && _local.pop.start();
                    }) : farmBuilding.resizer(), !0;
                },
                refresh: function() {
                    return window.location = window.location.href.split("#")[0];
                }
            },
            common: {
                init: function() {
                    function parallax() {
                        var scrolled = $(window).scrollTop();
                        $(".parallax").each(function() {
                            var _e = $(this), offTop = (_e.outerHeight(), _e.offset().top - $(window).height()), scrollminus = parseInt(scrolled - offTop);
                            _e.isOnScreen() && _e.css("background-position", "center " + -(.5 * scrollminus) + "px");
                        });
                    }
                    {
                        var bodyChanged = _.debounce(function() {
                            $(".centerHorizontal").centerHorizontal(), $(".centerVertical").centerVertical(), 
                            $(".centerCenter").centerCenter(), $(".makeSquare").makeSQ();
                        }, 300);
                        _NS.geo.reference();
                    }
                    if ($(window).scroll(function() {
                        var _sp = $(window).scrollTop();
                        _sp > 300 ? _.debounce($("#calltoaction").stop().slideDown(), 500) : _.debounce($("#calltoaction").stop().slideUp(), 500);
                    }), _local.isConfigurable()) if (is_IE10Below) $("#cofiguratorMain").bind("DOMSubtreeModified", bodyChanged); else {
                        MutationObserver = window.MutationObserver || window.WebKitMutationObserver;
                        var observer = new MutationObserver(function() {
                            bodyChanged();
                        });
                        observer.observe(document.getElementById("cofiguratorMain"), {
                            subtree: !0,
                            attributes: !0,
                            childList: !1,
                            characterData: !1
                        });
                    }
                    $("#mycart").on("click", function(e) {
                        $(".header-minicart .skip-cart").trigger("click"), e.stopPropagation();
                    }), parallax(), $(window).scroll(function() {
                        parallax();
                    }), bodyChanged();
                }
            },
            cms_home: {
                init: function() {}
            },
            product_sp_series_shelter: {
                init: function() {
                    $(".form #product-options-wrapper dl dd").each(function() {
                        var _id = $(this).find("select").attr("id"), _this = $("#" + _id);
                        Event.observe(_this.get()[0], "change", function() {
                            return _NS.uiEvent.setAttr($(this), !0);
                        });
                    }), $(".videoModal").on("click", function(e) {
                        e.preventDefault(), $("#videoModal iframe").attr("src", $(this).data("youtube")).attr("data-src", $(this).data("youtube")), 
                        $("#videoModal").foundation("reveal", "open");
                    }), $("#videoModal").on("closed.fndtn.reveal", "[data-reveal]", function() {
                        var modal = $(this);
                        modal.find("iframe").attr("src", "").attr("data-src", "");
                    }), (hash && !isMobile.any || hash && $(window).width() < 1e3) && hash.indexOf("simpleform") >= 0 && _showForm.trigger("click"), 
                    editConfiguration ? (setTimeout(function() {
                        _NS.init.getState(!0);
                    }, 500), $(".no-edit").remove()) : _NS.init.loader(), $("body").delegate(".UI", "click", function(e) {
                        if (e.preventDefault(), e.stopPropagation(), !$(this).hasClass("disable")) {
                            var func = $(this).data("func");
                            _.debounce(farmBuilding.uiEvent[func](e), 1e3, !0);
                        }
                    }), $(window).resize(function() {
                        _.debounce(farmBuilding.init.getState(!0), 1e3, !0);
                    });
                }
            },
            checkout_cart_index: {
                init: function() {
                    $(".btn-proceed-checkout span span").prepend('<i class="fa fa-shopping-cart"></i>'), 
                    $(".product-cart-image").each(function() {
                        _e = $(this);
                        var _href = "";
                        _e.find(".cart-links li a").each(function() {
                            "edit" == $(this).text().toLowerCase() && (_href = $(this).attr("href"), _e.find(".product-image").attr("href", _href));
                        });
                    });
                }
            },
            checkout_onepage_index: {
                init: function() {
                    function confirmExit() {
                        return $("#sendModal").foundation("reveal", "open"), checkoutAlert;
                    }
                    {
                        var form_set = !1, cart = $("#cart-sidebar li");
                        cart.length;
                    }
                    cart.each(function() {
                        var pd = $(this).find(".product-details"), pn = pd.find(".product-name a").text(), pp = pd.find(".price").text(), sk = pd.find(".product-sku").text(), qt = pd.find(".qty-wrapper .qty.cart-item-quantity").val(), trunc = pd.find(".truncated .truncated_full_value .item-options"), trunc_text = "";
                        if (trunc.doesExist()) {
                            var trunc_html = trunc.clone().prop("innerHTML").replace(/(\r\n|\n|\r)/gm, "").replace(/\s\s/g, "").replace(/(\<\/dt\>\<dd\>)/g, " - ").replace(/(\<\/dd>\<dt\>)/g, "\n").replace(/(\<dt>|\<\/dd\>)/g, "");
                            trunc_text = "\n\r" + trunc_html + "\n\r\n\r";
                        }
                        var new_cart = "SKU: " + sk + ", " + pn + " - QTY(" + qt + ") - Price: " + pp + trunc_text;
                        $(".webforms-fields-send-cart-cart-data .input-box textarea").append(new_cart);
                    }), $(".webforms-fields-send-cart-subject .input-box input.input-text").val("Your cart detail on " + window.location.host), 
                    $("form input, form select").on("change", function() {
                        var b_fax = $('input[name="billing[fax]"]').val(), b_country = ($('input[name="billing[telephone]"]').val(), 
                        $('select[name="billing[country_id]"]').find("option:selected").text()), b_zip = $('input[name="billing[postcode]"]').val(), b_reg = $('select[name="billing[region_id]"]').find("option:selected").text(), b_cit = $('input[name="billing[city]"]').val(), b_add2 = $('input[title="Street Address 2"]').val(), b_add = $('input[title="Street Address"]').val(), b_em = $('input[name="billing[email]"]').val(), b_co = $('input[name="billing[company]"]').val(), b_ln = $('input[name="billing[lastname]"]').val(), b_fn = $('input[name="billing[firstname]"]').val(), b_text = "Name: " + b_fn + " " + b_ln + "\nCompany: " + b_co + "\nEmail: " + b_em + "\nAddress: " + b_add + "\nAddress 2: " + b_add2 + "\nCity: " + b_cit + "\nState: " + b_reg + "\nZip: " + b_zip + "\nCountry: " + b_country + "\nFax: " + b_fax;
                        $(".webforms-fields-send-cart-customer-data .input-box textarea").text(b_text);
                    });
                    var formOnChanged = _.debounce(function() {
                        $("#opc-review .btn-checkout").doesExist() && ($("#agreeTerms").doesExist() || $("#review-buttons-container").prepend('<button id="agreeTerms" title="Place Order" class="button" data-reveal-id="confirmModal" ><span><span>Place Order</span></span></button>'));
                    }, 100);
                    if (is_IE10Below) $("#checkoutSteps").bind("DOMSubtreeModified", formOnChanged); else {
                        MutationObserver = window.MutationObserver || window.WebKitMutationObserver;
                        var formobserver = new MutationObserver(function() {
                            formOnChanged();
                        });
                        formobserver.observe(document.getElementById("checkoutSteps"), {
                            subtree: !0,
                            attributes: !0,
                            childList: !1,
                            characterData: !1
                        });
                    }
                    $("body").delegate("#confirmOrder", "click", function(e) {
                        e.preventDefault(), e.stopPropagation(), $("[data-reveal]").foundation("reveal", "close");
                        review.save();
                    }), form_set || (window.onbeforeunload = confirmExit);
                }
            }
        });
    }(farmBuilding = farmBuilding || {}), $(document).on("opened.fndtn.reveal", "#quoteModal", function() {
        return farmBuilding.modalWork.quoteModal();
    }), $(document).on("opened.fndtn.reveal", "[data-reveal]", function() {
        $(this);
        $("body").addClass("modalOpen"), $(".reveal-modal h2").fitText(1.45, {
            minFontSize: "6px",
            maxFontSize: "43px"
        }), $(".reveal-modal .color .btnColor span").fitText(1.45, {
            minFontSize: "10px",
            maxFontSize: "20px"
        }), $(".reveal-modal#startModal h2").fitText(1.1, {
            minFontSize: "6px",
            maxFontSize: "63px"
        }), $(".reveal-modal h4").fitText(1.4, {
            minFontSize: "6px",
            maxFontSize: "25px"
        });
        var bigbrother = -1;
        $(".orbit-slides-container li").each(function() {
            bigbrother = bigbrother > $(".orbit-slides-container li").height() ? bigbrother : $(".orbit-slides-container li").height();
        }), $(".orbit-slides-container").each(function() {
            $(".orbit-slides-container").height(bigbrother);
        }), _screenCenterHorizontal.centerHorizontal(), _screenCenterVertical.centerVertical(), 
        _screenCenter.centerCenter(), _makeSquare.makeSQ();
    }), $(document).on("close.fndtn.reveal", "[data-reveal]", function() {
        return $("body").removeClass("modalOpen");
    });
    var UTIL = {
        fire: function(func, funcname, args) {
            var namespace = farmBuilding;
            funcname = void 0 === funcname ? "init" : funcname, "" !== func && namespace[func] && "function" == typeof namespace[func][funcname] && namespace[func][funcname](args);
        },
        loadEvents: function() {
            UTIL.fire("common"), $.each(document.body.className.replace(/-/g, "_").split(/\s+/), function(i, classnm) {
                UTIL.fire(classnm);
            });
        }
    };
    $(document).ready(function() {
        $("#showForm").on("click", function(e) {
            e.preventDefault(), clearTimeout(hash_timer);
            var hash = window.location.hash, this_hash = hash.replace("!simpleform", "");
            $("#simpleUI").toggleClass("show"), $("body").toggleClass("form-short"), $("#fancyUI").toggleClass("show");
            var hash_timer = setTimeout(function() {
                window.location.hash = $("#fancyUI").hasClass("show") ? this_hash : this_hash + "!simpleform";
            }, 500);
        }), $(".menu-icon").click(function() {});
    }), $(window).load(UTIL.loadEvents);
}(jQuery);